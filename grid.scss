// vars
$grid-columns: 12;
$grid-toggle-point-small: 600px;
$grid-toggle-point-big: 1000px;
$grid-small-padding: 10px;
$grid-medium-padding: 15px;
$grid-big-padding: 20px;


// mixins for generating grid itself
@mixin grid-columns($grid-name) {
  // zero-width column
  .#{$grid-name}-0 {
    display: none;
    width: 0%;
  }

  // loop for all possible columns
  @for $i from 1 through $grid-columns {
    @for $j from 1 through $i - 1 {

      // grid column .<name>-<j>-<i>
      .#{$grid-name}-#{$j}-#{$i} {
        width: 100% * ($j / $i);
      }
    }

    // full width column
    .#{$grid-name}-#{$i}-#{$i} {
      width: 100%;
    }
  }
}

@mixin grid-layout($grid-size, $grid-padding) {
  $grid-half-padding: $grid-padding / 2;

  [class*='#{$grid-size}-'], [class*='#{$grid-size}-']:after, [class*='#{$grid-size}-']:before {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }

  [class*='#{$grid-size}-'] {
    float: left;
    padding: 0 $grid-half-padding;
  }

  .grid-row {
    padding: $grid-padding $grid-half-padding 0 $grid-half-padding;
  }

  @include grid-columns($grid-size);
}

// grid itself

// 0) general styles
.grid-row {
  padding: 0;

  &:after {
    box-sizing: border-box;

    clear: both;
    content: "";
    display: table;
  }
  &, &:after, &:before {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
}

.push-right {
  float: right;
}

// 1) small
@media (max-width: $grid-toggle-point-small) {
  @include grid-layout('small', $grid-small-padding);
}

// 2) medium
@media (min-width: $grid-toggle-point-small + 1px) and (max-width: $grid-toggle-point-big) {
  @include grid-layout('medium', $grid-medium-padding);
}

// 3) big
@media (min-width: $grid-toggle-point-big + 1px) {
  @include grid-layout('big', $grid-big-padding);
}

